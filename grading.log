clang -c -o wheel.o wheel.c -I. -g -Wall --std=gnu11 -fpic
clang -o wheel wheel.o 
clang -shared -o libwheel.so wheel.o 
=== All words are read from file (01a) =========================================
Running test 01a with word file /home/aaron/teaching/cosc208/resources/proj02/grading/tests/01ade.txt

List:
	OMEGA
	PSI
	CHI
	PHI
	UPSILON
	TAU
	SIGMA
	RHO
	PI
	OMICRON
	XI
	NU
	MU
	LAMBDA
	KAPPA
	IOTA
	THETA
	ETA
	ZETA
	EPSILON
	DELTA
	GAMMA
	BETA
	ALPHA
Returned count 23 != expected count 24

=== FAIL (0/1) =================================================================

=== Words with apostrophes are ignored (01b) ===================================
Running test 01b with word file /home/aaron/teaching/cosc208/resources/proj02/grading/tests/01bc.txt

=== PASS (1/1) =================================================================

=== Words are stored in upper case (01c) =======================================
Running test 01c with word file /home/aaron/teaching/cosc208/resources/proj02/grading/tests/01bc.txt

=== PASS (1/1) =================================================================

=== New item is properly allocated (02a) =======================================
Running test 02a

Stack addr: 0x7ffd72702edc

=== PASS (1/1) =================================================================

=== String is properly stored (02b) ============================================
Running test 02b

Stack addr: 0x7ffc0794f25c

=== PASS (1/1) =================================================================

=== First item is properly added (02c) =========================================
/home/aaron/teaching/cosc208/resources/proj02/grading/tests/02c.sh: line 7:  8672 Segmentation fault      (core dumped) LD_LIBRARY_PATH=$REPODIR $BASEDIR/test02 c
=== FAIL (0/1) =================================================================

=== List integrity is preserved when adding a second item (02d) ================
Running test 02d

Stack addr: 0x7ffdbeef59bc

=== PASS (1/1) =================================================================

=== All strings are freed (03a) ================================================
==8706== Memcheck, a memory error detector
==8706== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8706== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==8706== Command: /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test03 a
==8706== 
Running test 03a

==8706== 
==8706== HEAP SUMMARY:
==8706==     in use at exit: 0 bytes in 0 blocks
==8706==   total heap usage: 12 allocs, 12 frees, 4,776 bytes allocated
==8706== 
==8706== All heap blocks were freed -- no leaks are possible
==8706== 
==8706== For counts of detected and suppressed errors, rerun with: -v
==8706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=== PASS (1/1) =================================================================

=== All items are freed (03b) ==================================================
==8726== Memcheck, a memory error detector
==8726== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==8726== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==8726== Command: /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test03 b
==8726== 
Running test 03b

==8726== 
==8726== HEAP SUMMARY:
==8726==     in use at exit: 0 bytes in 0 blocks
==8726==   total heap usage: 202 allocs, 202 frees, 6,201 bytes allocated
==8726== 
==8726== All heap blocks were freed -- no leaks are possible
==8726== 
==8726== For counts of detected and suppressed errors, rerun with: -v
==8726== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=== PASS (1/1) =================================================================

=== Random word is chosen (01d) ================================================
Running test 01d with word file /home/aaron/teaching/cosc208/resources/proj02/grading/tests/01ade.txt

Random word is PI
Random word is PI
Random word is RHO
=== PASS (1/1) =================================================================

=== Any word can be chosen (01e) ===============================================
/home/aaron/teaching/cosc208/resources/proj02/grading/tests/01e.sh: line 7:  8772 Segmentation fault      (core dumped) LD_LIBRARY_PATH=$REPODIR $BASEDIR/test01 $BASEDIR/01ade.txt e
=== FAIL (0/1) =================================================================

=== Player number and balance is displayed (04a) ===============================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Re-prompts on invalid character (04b) ======================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? X
Invalid choice
Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Re-prompts on multiple characters (04c) ====================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? STU
Solution? No error on multiple characters
=== FAIL (0/1) =================================================================

=== Only unguessed consonants are displayed (04d) ==============================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? D
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C F G H J K L M N P Q R S T V W X Y Z )? === PASS (1/1) =================================================================

=== Turn ends on invalid or multiple characters (04e) ==========================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? 0
Invalid choice
Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? CD
Invalid choice
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Lowercase characters are accepted (04f) ====================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? d
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Turn ends if an already guessed consonant is entered (04g) =================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? D
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C F G H J K L M N P Q R S T V W X Y Z )? D
Invalid letter
Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Player is awarded appropriate amount for a correct guess (04h) =============
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? D
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $1600

Player 1's earnings: $2400

_ _ B B _ D _ 

=== PASS (1/1) =================================================================

=== Turn continues if consonant is present (04i) ===============================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? D
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Turn ends if consonant is not present (04j) ================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? T
Not in the puzzle
Player 1's earnings: $0

Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Turn ends if insufficient funds (04k) ======================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Insufficient funds
Player 1's earnings: $0

Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Only unguessed vowels are displayed (04m) ==================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? E
Player 1's earnings: $1350

_ _ B B _ _ E 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A I O U )? === PASS (1/1) =================================================================

=== Turn ends on invalid or multiple characters (04n) ==========================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? T
Invalid letter

Player 2's turn
Player 2's earnings: $0
_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( C D F G H J K L M N P Q R S T V W X Y Z )? C
Player 2's earnings: $800

_ _ B B C _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? IOU
Invalid letter

Player 1's turn
Player 1's earnings: $1600
_ _ B B C _ _ 

=== PASS (1/1) =================================================================

=== Lowercase characters are accepted (04o) ====================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? e
Player 1's earnings: $1350

_ _ B B _ _ E 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Player's balance is always reduced $250 for vowel purchase (04p) ===========
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? E
Player 1's earnings: $1350

_ _ B B _ _ E 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A I O U )? A
Player 1's earnings: $1100

Player 1's earnings: $850

A A B B _ _ E 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( I O U )? I
Not in the puzzle
Player 1's earnings: $850

Player 2's turn
Player 2's earnings: $0
A A B B _ _ E 

=== PASS (1/1) =================================================================

=== Turn continues if vowel is present (04q) ===================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? E
Player 1's earnings: $1350

_ _ B B _ _ E 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Turn ends if vowel is not present (04r) ====================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $800

Player 1's earnings: $1600

_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? I
Not in the puzzle
Player 1's earnings: $1600

Player 2's turn
Player 2's earnings: $0
_ _ B B _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Correct solution is accepted (04s) =========================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? AABBCDE
_ _ _ _ _ _ _ 


Player 1 solved the puzzle!
=== PASS (1/1) =================================================================

=== Mix of lower and uppercase characters are accepted (04t) ===================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? aAbBcDe
_ _ _ _ _ _ _ 


Player 1 solved the puzzle!
=== PASS (1/1) =================================================================

=== Only correct solutions are accepted (04u) ==================================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? AAXBCDE
_ _ _ _ _ _ _ 
Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? AABBCDX
_ _ _ _ _ _ _ 
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? AABBXY
_ _ _ _ _ _ _ 
Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? S
Solution? AABBCD
_ _ _ _ _ _ _ 
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Current state of puzzle is properly displayed (04v) ========================
spawn /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test04
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? D
Player 1's earnings: $800

_ _ _ _ _ D _ 

Spin (1-5), Buy (B), Solve (S)? B
Vowel ( A E I O U )? E
Player 1's earnings: $550

_ _ _ _ _ D E 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C F G H J K L M N P Q R S T V W X Y Z )? B
Player 1's earnings: $1350

Player 1's earnings: $2150

_ _ B B _ D E 

Spin (1-5), Buy (B), Solve (S)? 1
1
                                                
 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( C F G H J K L M N P Q R S T V W X Y Z )? X
Not in the puzzle
Player 1's earnings: $2150

Player 2's turn
Player 2's earnings: $0
_ _ B B _ D E 

Spin (1-5), Buy (B), Solve (S)? === PASS (1/1) =================================================================

=== Uses defined constants (05a) ===============================================
WORDS_FILE
547:    item_t *list_head = load_words(WORDS_FILE, &numwords);
549:        printf("Failed to load words from %s\n", WORDS_FILE);

MAX_WORD_LENGTH
360:    char player_guess[MAX_WORD_LENGTH+1];
362:    fgets(player_guess,MAX_WORD_LENGTH+1,stdin);

MAX_INPUT_LENGTH
271:    char input[MAX_INPUT_LENGTH];
289:    fgets(input,MAX_INPUT_LENGTH,stdin); 
313:    char input[MAX_INPUT_LENGTH];
332:    fgets(input,MAX_INPUT_LENGTH,stdin); 
418:        char input[MAX_INPUT_LENGTH];
429:            fgets(input,MAX_INPUT_LENGTH,stdin); 

VOWEL_COST
433:                if ((*earnings) - VOWEL_COST < 0) {
451:                                *earnings = (*earnings) - VOWEL_COST;

ACTION_PROMPT
428:            printf(ACTION_PROMPT);

INVALID_ACTION
493:                        printf(INVALID_ACTION);
526:                printf(INVALID_ACTION);

INVALID_LETTER
347:            printf(INVALID_LETTER);
442:                        printf(INVALID_LETTER);

INSUFFICIENT_FUNDS
434:                    printf(INSUFFICIENT_FUNDS);

SOLUTION_PROMPT
361:    printf(SOLUTION_PROMPT);

=== PASS (2/2) =================================================================

=== play_round calls other functions (05b) =====================================
int play_round(const char *word) {
    int length = strlen(word) + 1;
    char *puzzle = malloc(sizeof(char) * length+1); 
    memset(puzzle, '\0', length+1);
    puzzle = make_puzzle(word, puzzle);
    // Used in buy_vowel
    char past_vowel_guesses[6];
    memset(past_vowel_guesses, '\0', 6);
    int buy_guesses = 0;
    // Used in guess_consonant
    int guesses = 0;
    char *past_consonant_guesses = malloc(sizeof(char) * 22); 
    memset(past_consonant_guesses, '\0', 22); 
    // Used to track players' turn
    int turn = 1;
    int player1_earn = 0;
    int player2_earn = 0;
    int * earnings; //= malloc(sizeof(int));
    while (puzzle != word) {
        if (turn == 1) {
            earnings = &player1_earn;
            player_turn(turn, *earnings);
        }
        if (turn == 2) {
            earnings = &player2_earn;
            player_turn(turn, *earnings);
        }
        char player_action;
        char input[MAX_INPUT_LENGTH];
        int wrong_input = 1;
        const char spin[] = "12345";
        bool show_puzzle = true;
        while (wrong_input==1) {
            bool in_word = false;
            if (show_puzzle) { //won't print if INVALID CHOICE occurs
                print_puzzle(word, puzzle);
                printf("\n");
            }
            printf(ACTION_PROMPT);
            fgets(input,MAX_INPUT_LENGTH,stdin); 
            player_action=input[0];
            player_action = toupper(player_action); //Converts input to uppercase
            if (player_action == 'B') {
                if ((*earnings) - VOWEL_COST < 0) {
                    printf(INSUFFICIENT_FUNDS);
                    printf("\n");
                    printf("Player %d's earnings: $%d\n\n", turn, *earnings);
                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                    wrong_input = 0;
                } else {
                    char vowel_answer = buy_vowel(past_vowel_guesses, word);                    
                    if (vowel_answer == '4'){
                        printf(INVALID_LETTER);
                        printf("\n\n");
                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                        wrong_input = 0;
                    } else {
                        for (int y = 0; y < strlen(word); y++) { //add letter to puzzle and to past guesses & subtract earnings
                            if (word[y] == vowel_answer) {
                                puzzle[y] = vowel_answer;
                                past_vowel_guesses[buy_guesses] = vowel_answer;    
                                *earnings = (*earnings) - VOWEL_COST;
                                in_word = true; //tells use that letter is in puzzle
                                buy_guesses += 1;
                                printf("Player %d's earnings: $%d\n\n", turn, *earnings);
                                if (check_solved(word, puzzle)){ //Check if the puzzle is solved
                                    return turn;
                                }
                             }
                        }
                        if (!in_word) { //add letter to past guesses and display error + switch turn
                            past_vowel_guesses[buy_guesses] = vowel_answer;
                            printf(ABSENT_LETTER);
                            printf("\n");
                            printf("Player %d's earnings: $%d\n\n", turn, *earnings);
                            buy_guesses += 1;
                            turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                            wrong_input = 0;
                        }
                    }               
                }          
            } else if (player_action == 'S') {  
                bool solved = solve_puzzle(word);
                if (solved == false) {
                    print_puzzle(word, puzzle);
                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                    wrong_input = 0;
                } else {
                    print_puzzle(word, puzzle); 
                    printf("\n\n");
                    return turn;
                }
            } else if (strchr(spin, player_action) != NULL) { //player selected a number (1-5)
                // printf("The player inputed %d \n", atoi(&player_action));
                int speed = atoi(input);
                printf("%d\n", speed);
                int potential_earnings = spin_wheel(speed);
                // int potential_earnings = 500;
                char consonant = guess_consonant(past_consonant_guesses, word);
                if (consonant == '4') {
                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                    wrong_input = 0;
                } else if (consonant == '6') {
                        printf(INVALID_ACTION);
                        printf("\n");
                        show_puzzle = false;
                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                        wrong_input = 0;
                } else  {
                    for (int y = 0; y < strlen(word); y++) {
                         if (word[y] == consonant) {
                            // printf("Definitely in word at %d index.\n", y);                                                        
                            // printf("able to change partial solution.\n");
                            // printf("number of guesses: %d.\n", guesses);
                            puzzle[y] = consonant;
                            past_consonant_guesses[guesses] = consonant;
                            in_word = true;
                            *earnings = (*earnings) + potential_earnings;
                            guesses += 1;
                            printf("Player %d's earnings: $%d\n\n", turn, *earnings);
                            if (check_solved(word, puzzle)){ //Check if it was solved
                                return turn;
                            }
                        }
                    }
                    if (!in_word) {
                        past_consonant_guesses[guesses] = consonant;
                        printf(ABSENT_LETTER);
                        printf("\n");
                        printf("Player %d's earnings: $%d\n\n", turn, *earnings);
                        guesses += 1;
                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
                        wrong_input = 0;
                    }
                }
            } else {
                printf(INVALID_ACTION);
                printf("\n");
                show_puzzle = false;
            }
        }
    }
    return turn;
}
=== MANUAL (?/2) ===============================================================

=== Uses built-in character functions (05c) ====================================
173-    char line[100];
174-    while (fgets(line, 100, infile) != NULL) {
175-        int i;
176-        int alpha_check = 0;
177-        for(i = 0; i < strlen(line) - 1; i++) {
178:            if (isalpha(line[i]) == 0) {
179-                alpha_check = 1; //means their is a letter that is not an alpha
180-            } else {
181-                line[i] = toupper(line[i]); //convert letter to upper case
182-            }
183-        } 
--
287-    printf(")? ");
288-    //Gets users guess
289-    fgets(input,MAX_INPUT_LENGTH,stdin); 
290-    char player_guess = toupper(input[0]); //Converts input to uppercase
291-    //Test the User's Guess
292:    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is a letter or >1
293-        return '4';
294-    }
295-    for (int x = 0; x < 5; x++) { //check if vowel was already guessed
296-        if (past_vowel_guesses[x] == player_guess) {
297-            return '4';
--
330-    printf(")? ");
331-    //Gets users guess)
332-    fgets(input,MAX_INPUT_LENGTH,stdin); 
333-    char player_guess = toupper(input[0]); //Converts input to uppercase
334-    //Test the User's Guess
335:    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is not a letter or >1      
336-        return '6';
337-    }
338-    //Test to make sure user entered a consonant 
339-    for (int x = 0; x < 5; x++) { //check if vowel was guessed
340-        if (vowels[x] == player_guess) {
176-        int alpha_check = 0;
177-        for(i = 0; i < strlen(line) - 1; i++) {
178-            if (isalpha(line[i]) == 0) {
179-                alpha_check = 1; //means their is a letter that is not an alpha
180-            } else {
181:                line[i] = toupper(line[i]); //convert letter to upper case
182-            }
183-        } 
184-        line[i] = '\0'; //Strip the New Line Charater
185-        
186-        if (list_head -> word == NULL) { //set the head
--
285-        }
286-    }
287-    printf(")? ");
288-    //Gets users guess
289-    fgets(input,MAX_INPUT_LENGTH,stdin); 
290:    char player_guess = toupper(input[0]); //Converts input to uppercase
291-    //Test the User's Guess
292-    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is a letter or >1
293-        return '4';
294-    }
295-    for (int x = 0; x < 5; x++) { //check if vowel was already guessed
--
328-        }
329-    }
330-    printf(")? ");
331-    //Gets users guess)
332-    fgets(input,MAX_INPUT_LENGTH,stdin); 
333:    char player_guess = toupper(input[0]); //Converts input to uppercase
334-    //Test the User's Guess
335-    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is not a letter or >1      
336-        return '6';
337-    }
338-    //Test to make sure user entered a consonant 
--
359-    int length = strlen(word);
360-    char player_guess[MAX_WORD_LENGTH+1];
361-    printf(SOLUTION_PROMPT);
362-    fgets(player_guess,MAX_WORD_LENGTH+1,stdin);
363-    for (int i = 0; i < length; i++){
364:        player_guess[i] = toupper(player_guess[i]); //convert letter to upper case
365-        if (player_guess[i] != word[i]) {
366-            return false;
367-        }
368-    }
369-    return true;
--
426-                printf("\n");
427-            }
428-            printf(ACTION_PROMPT);
429-            fgets(input,MAX_INPUT_LENGTH,stdin); 
430-            player_action=input[0];
431:            player_action = toupper(player_action); //Converts input to uppercase
432-            if (player_action == 'B') {
433-                if ((*earnings) - VOWEL_COST < 0) {
434-                    printf(INSUFFICIENT_FUNDS);
435-                    printf("\n");
436-                    printf("Player %d's earnings: $%d\n\n", turn, *earnings);
=== PASS (2/2) =================================================================

=== Word file is closed (05d) ==================================================
189-            list_head = prepend_item(list_head, line); 
190-            *words_loaded = *words_loaded + 1; 
191-        }
192-        alpha_check = 0;        
193-    }
194:	fclose(infile); 
195-    return list_head;
196-}
197-
198-/*
199- * Destroys a linked list and frees all memory it was using.
=== PASS (1/1) =================================================================

=== No memory leaks (05e) ======================================================
==9531== Memcheck, a memory error detector
==9531== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==9531== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==9531== Command: /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test05
==9531== 
Random word is BUFF
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
                                                
 5 8 5 8 7 8 5 6 8 5 7 7 7 8 7 7 8 5 8 5 9 9 8 8
 5 5 0 5 5 5 5 5 0 5 5 0 5 5 5 0 0 0 5 5 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? Player 1's earnings: $850

_ _ _ _ _ T _ 

Spin (1-5), Buy (B), Solve (S)? Vowel ( A E I O U )? Player 1's earnings: $600

_ _ _ _ _ T E 

Spin (1-5), Buy (B), Solve (S)? 2
                                                
 5 8 5 8 7 8 5 6 8 5 7 7 7 8 7 7 8 5 8 5 9 9 8 8
 5 5 0 5 5 5 5 5 0 5 5 0 5 5 5 0 0 0 5 5 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 19
                   +                            

Consonants ( B C D F G H J K L M N P Q R S V W X Y Z )? Not in the puzzle
Player 1's earnings: $600

Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ T E 

Spin (1-5), Buy (B), Solve (S)? Solution? _ _ _ _ _ T E 


Player 2 solved the puzzle!
==9531== 
==9531== HEAP SUMMARY:
==9531==     in use at exit: 31 bytes in 2 blocks
==9531==   total heap usage: 145,583 allocs, 145,581 frees, 1,840,135 bytes allocated
==9531== 
==9531== 9 bytes in 1 blocks are definitely lost in loss record 1 of 2
==9531==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9531==    by 0x4E3C114: play_round (wheel.c:392)
==9531==    by 0x400A59: main (05.c:35)
==9531== 
==9531== 22 bytes in 1 blocks are definitely lost in loss record 2 of 2
==9531==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9531==    by 0x4E3C17A: play_round (wheel.c:401)
==9531==    by 0x400A59: main (05.c:35)
==9531== 
==9531== LEAK SUMMARY:
==9531==    definitely lost: 31 bytes in 2 blocks
==9531==    indirectly lost: 0 bytes in 0 blocks
==9531==      possibly lost: 0 bytes in 0 blocks
==9531==    still reachable: 0 bytes in 0 blocks
==9531==         suppressed: 0 bytes in 0 blocks
==9531== 
==9531== For counts of detected and suppressed errors, rerun with: -v
==9531== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
=== FAIL (0/2) =================================================================

=== No memory errors (05f) =====================================================
==9551== Memcheck, a memory error detector
==9551== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==9551== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==9551== Command: /home/aaron/teaching/cosc208/resources/proj02/grading/tests/test05
==9551== 
Random word is BUFF
Player 1's turn
Player 1's earnings: $0
_ _ _ _ _ _ _ 

Spin (1-5), Buy (B), Solve (S)? 1
                                                
 5 8 5 8 7 8 5 6 8 5 7 7 7 8 7 7 8 5 8 5 9 9 8 8
 5 5 0 5 5 5 5 5 0 5 5 0 5 5 5 0 0 0 5 5 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 11
           +                                    

Consonants ( B C D F G H J K L M N P Q R S T V W X Y Z )? Player 1's earnings: $850

_ _ _ _ _ T _ 

Spin (1-5), Buy (B), Solve (S)? Vowel ( A E I O U )? Player 1's earnings: $600

_ _ _ _ _ T E 

Spin (1-5), Buy (B), Solve (S)? 2
                                                
 5 8 5 8 7 8 5 6 8 5 7 7 7 8 7 7 8 5 8 5 9 9 8 8
 5 5 0 5 5 5 5 5 0 5 5 0 5 5 5 0 0 0 5 5 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
The col 19
                   +                            

Consonants ( B C D F G H J K L M N P Q R S V W X Y Z )? Not in the puzzle
Player 1's earnings: $600

Player 2's turn
Player 2's earnings: $0
_ _ _ _ _ T E 

Spin (1-5), Buy (B), Solve (S)? Solution? _ _ _ _ _ T E 


Player 2 solved the puzzle!
==9551== 
==9551== HEAP SUMMARY:
==9551==     in use at exit: 31 bytes in 2 blocks
==9551==   total heap usage: 145,583 allocs, 145,581 frees, 1,840,135 bytes allocated
==9551== 
==9551== For a detailed leak analysis, rerun with: --leak-check=full
==9551== 
==9551== For counts of detected and suppressed errors, rerun with: -v
==9551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==9551== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=== PASS (3/3) =================================================================

=== Code compiles without warnings (05g) =======================================
=== PASS (2/2) =================================================================

=== Contains comments (05h) ====================================================
+    if (list_head -> word == NULL) { // is their is no head make one
+        return list_head;  // return the head
+    } else { // create the next word struct
+        return nexts;  // return the added word aka the struct iteam_t
+    // Load the file and error is no path is found
+    // create a struct + the empty head
+                alpha_check = 1; //means their is a letter that is not an alpha
+                line[i] = toupper(line[i]); //convert letter to upper case
+        line[i] = '\0'; //Strip the New Line Charater
+        if (list_head -> word == NULL) { //set the head
+        } else if (alpha_check == 0) { //if all letters are alpha put in list
+ //This is unfinished. Still need to fix it. 
+    while (list_head != NULL) { //If head is null, reached the end of the list
+        list_head = list_head->next; //head now points to the next item in the list
+        free(tmp); //de-allocates the memory for the head item in list
+    //char state1[32];
+    //initstate(time(NULL), state1, sizeof(state1));
+    //setstate(state1);
+    //Produces random number used to step through list
+    //Step through linked list until word that corresponds with n is found 
+    // return "COLGATE"; // TESTER
+/*
+ */
+//Creates initial puzzle 
+//prints puzzle for each turn
+    // Print the vowels not already guessed
+    //Gets users guess
+    char player_guess = toupper(input[0]); //Converts input to uppercase
+    //Test the User's Guess
+    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is a letter or >1
+    for (int x = 0; x < 5; x++) { //check if vowel was already guessed
+        if (vowels[x] == player_guess) { //Check if guess is a vowel
+    //Test where the guess is in the the answer
+        return '4'; //Returns if input is not a vowel
+    // printf("Hit\n");
+    // Print the consonants that have not already been guessed
+    //Gets users guess)
+    char player_guess = toupper(input[0]); //Converts input to uppercase
+    //Test the User's Guess
+    if (isalpha(player_guess) == 0 || strlen(input) - 1 > 1) { //if guess is not a letter or >1      
+    //Test to make sure user entered a consonant 
+    for (int x = 0; x < 5; x++) { //check if vowel was guessed
+    //printf("Valid input (aka it's a consonant)\n"); //DEBUGGER
+    for (int x = 0; x < 22; x++) { //check if consonant was already guessed
+        if (consonants[x] == player_guess) { //Check if guess is a consonant
+        player_guess[i] = toupper(player_guess[i]); //convert letter to upper case
+    // printf("The length is %d\n", length);
+    // Used in buy_vowel
+    // Used in guess_consonant
+    // Used to track players' turn
+    int * earnings; //= malloc(sizeof(int));
+            if (show_puzzle) { //won't print if INVALID CHOICE occurs
+            player_action = toupper(player_action); //Converts input to uppercase
+                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+                        for (int y = 0; y < strlen(word); y++) { //add letter to puzzle and to past guesses & subtract earnings
+                                in_word = true; //tells use that letter is in puzzle
+                                if (check_solved(word, puzzle)){ //Check if the puzzle is solved
+                        if (!in_word) { //add letter to past guesses and display error + switch turn
+                            turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+            } else if (strchr(spin, player_action) != NULL) { //player selected a number (1-5)
+                // printf("The player inputed %d \n", atoi(&player_action));
+                // int potential_earnings = 500;
+                    turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
+                            // printf("Definitely in word at %d index.\n", y);                                                        
+                            // printf("able to change partial solution.\n");
+                            // printf("number of guesses: %d.\n", guesses);
+                            if (check_solved(word, puzzle)){ //Check if it was solved
+                        turn = turn == 1 ? 2 : 1; //SWITCHES TURNS
=== MANUAL (?/2) ===============================================================

=== Multiple commits to git repo (05i) =========================================
=== PASS (2/2) =================================================================

